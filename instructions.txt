*** GITHUB SET UP ***
1. Do not fork repo - else your updates may be mixed into your own repo, clone directly from the repo under guanch92
2. Clone the repo to your local repo via terminal
3. create a branch of whatever feature you wish to work on (see below COLLABORATION 1)
4. pull from devt branch to get latest version of the files (see below COLLABORATION 2c)
5. work in your specific feature branch, push only to feature branch via terminal, until ready to merge into devt branch (see below COLLABORATION 3)
6. do merging edits via pull requests on github browser (see below COLLABORATION 4)

*** START FRONT END DEVELOPMENT ***
1. Access App with Create-React-App
a. Use a new terminal window to load App on Browser
- cd into client folder -> make sure you're in '.........../root/client' (i.e. the dir where your package.json resides)
- npx install (only once during first set up to ensure modules are synced, add node_modules to gitignore after for faster git pushes)
- npm start (while in ....../root/client)

--------------------------------------------------------

*** GITHUB COLLABORATION ***
1. Setting Up Feature Branches
a. Create Branch
- git checkout -b "new-branch-name".

b. Enter existing feature branch to edit
- git checkout "feature-branch-name"


2. Before editing feature
a. Ensure no one else is working on feature

b. Ensure terminal is in feature branch, else see 1b.

c. Pull from development branch "devt"
- git pull origin devt


3. To save work on feature without merging with devt
a. Save to current feature branch
- git push origin "feature-branch-name"


4. To merge and save to development branch (devt)
a. Merge only on github, not on terminal
- On terminal:
    -> add -A 
    -> commit -m "msg" 
    -> git push origin "feature-branch-name" (not 'devt' branch)
- Go to Github repo on browser :
    -> Pull requests 
    -> New pull request 
    -> "devt <--- feature-branch-name" 
    -> Create pull request & edit carefully
    -> Merge pull request 
    -> Confirm merge
